<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
        <!ENTITY name      "appdata.backup.beta">
        <!ENTITY author    "Robin Kluth">
        <!ENTITY version   "2025.09.17b1">
        <!ENTITY sha256    "f4c40a6912e3e0a2827ad0d0afdd89ab42d314d3488cbdf57031ebabd1448c7e">
        <!ENTITY launch    "Settings/AB.Beta.Main">
        <!ENTITY plugdir   "/usr/local/emhttp/plugins/&name;">
        <!ENTITY github    "Commifreak/unraid-appdata.backup">
        <!ENTITY pluginURL "https://raw.githubusercontent.com/&github;/master/&name;.plg">
        ]>

<PLUGIN name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" icon="shield"
        min="6.12" support="https://forums.unraid.net/topic/136995-pluginbeta-appdatabackup/">

    <CHANGES>
        <![CDATA[
        âž•New  ðŸ©¹Fix ðŸ”§Change
###2025.09.17b1
- ðŸ©¹ Fixed wrong behavior from previous fix for [Issue 56](https://github.com/Commifreak/unraid-appdata.backup/issues/56)
- ðŸ©¹ Fix buttons on Unraid 7.2+ (thanks to Squidly271)
- âž• You can now switch between normal and debug log within logging page

###2025.08.18b1
- ðŸ©¹ Re-read container state before executing the stop-command [Issue 56](https://github.com/Commifreak/unraid-appdata.backup/issues/56)

###2025.05.23b1
- ðŸ©¹ Fix backup of containers which have [Tailscale enabled](https://github.com/Commifreak/unraid-appdata.backup/pull/50)
- âž• The plugin now inserts a higher limit for PHP's `max_input_vars` to deal with the settings-form saving issue
- âž• The `pre-container` and `pre-backup` script can now return 2 to skip backup.

###2024.08.16b1
- âž• Added `pre-container` and `post-container` scripts which runs right before/after tar creation

###2024.02.08b1
- ðŸ”§ Created backups are now owned by `nobody:users` with permissions `rwxrw-rw-`
- ðŸ”§ `Skip stopping container?` (formerly known as `Don't stop container?`) is now a global option which can be adjusted in every container

###2024.02.07b1
- âž• If the plugin detects same mapping within multiple containers, it shows a warning
- âž• If multicore compression is enabled, you can now fine tune the cpu cores to use

###2023.12.07b1
- âž• Container grouping

###2023.11.03b1
- âž• Global exclusion list
- âž• You can enable a notification for updated containers (disable by default)
- ðŸ©¹ `postBackup` script will now be executed after backup, before starting the container
- ðŸ”§ Raise a warning (instead of info) if container has NO volumes to backup
- ðŸ”§ Container updates are now handled directly after backing them up

###2023.04.11
- ðŸ©¹ Saving the settings with no docker containers yet, results in a blank page

###2023.04.10
- ðŸš€ First stable version!

###2023.04.03b1
- ðŸ©¹ Fixed file selector for dark themes _(Unraids global config variable handling needs a revamp...)_

### 2023.03.31b2
- ðŸ©¹ ca.backup2 migration: Migrate old source path as well

### 2023.03.31b1
- ðŸ”¨ The restore default source path defaults now to the current set destination path
- ðŸ”§ You can choose a custom restore path now. This could be useful for advanced restoring. **This only applies to extracted archives, not for the config/xmls!**
- ðŸ”§ Changed the internal/external volume mapping detection again: You can choose ALL of your valid appdata sources now. **Open help for `Appdata source(s)` for further explanation**

### 2023.03.30b1
- ðŸ”¨ If a `ca.backup2` config file is detected, the plugin now offers a config migration
- ðŸ”§ Changed the way "internal" volumes are detected: `/mnt/{user,cache}/appdata` and optionally the docker set folder are treated as such. Any other volume mapping (`/mnt/user/downloads/myDownloads` as example) is "external". You can optionally backup those too (disabled by default)

### 2023.03.29b2
- ðŸ©¹ "External" volumes (volumes not within your appdata) path are now being ignored. A future update will bring options to save them as well
- ðŸ©¹ Container exclude list was not working as expected
- ðŸ©¹ Fixed settings page issues for Safari users
- ðŸ©¹ Fixed an issue during applying default settings to containers
- ðŸ”§ Faild backups are now kept (with -failed suffix)
- ðŸ”§ `Abort` now instantly stops any running command instead of waiting for its completion

### 2023.03.28b3
- ðŸ©¹ Some file selectors are opening some others - fixed
- ðŸ”§ Display container volumes one per line

### 2023.03.28b2
- ðŸ©¹ Fixed per container (only new ones) settings being hard-set to the global defaults instead of keeping 'Use default'
- ðŸ”¨ Added back update notice banner

### 2023.03.28b1
- ðŸ”¨ Added back VM meta backup
- ðŸ”¨ Added back update notice banner

### 2023.03.27b1
- ðŸ”¨ 1st beta
]]>
    </CHANGES>


    <FILE Run="/bin/bash">
        <INLINE>
            OLDVERS=$(ls /boot/config/plugins/&name;/*.tgz 2>/dev/null | grep -v '&version;')
            if [ ! -z "$OLDVERS" ]
            then
            echo "Cleaning old archives..."
            rm $OLDVERS
            else
            echo "No cleanup of old plugin archive needed!"
            fi

            if [ -d "&plugdir;" ]
            then
            echo "Removing plugin files..."
            rm -rf &plugdir;
            else
            echo "Plugin files were not present. Fresh install"
            fi
            echo "Creating plugin files directory..."
            mkdir &plugdir;
        </INLINE>
    </FILE>

    <FILE Name="/boot/config/plugins/&name;/&name;-&version;.tgz">
        <URL>https://github.com/&github;/releases/download/&version;/&name;-&version;.tgz</URL>
        <SHA256>&sha256;</SHA256>
    </FILE>

    <FILE Run="/bin/bash">
        <INLINE>
            echo "Extracting plugin files..."
            tar -C &plugdir; -xzf /boot/config/plugins/&name;/&name;-&version;.tgz 2>&amp;1
        </INLINE>
    </FILE>

    <FILE Run="/bin/bash">
        <INLINE>
            # Because we used the wrong way for reloading cron, we should remove the old remnants...
            if [ -f "/etc/cron.d/appdata_backup_beta" ]; then
            rm /etc/cron.d/appdata_backup_beta
            echo "Found old cron file, refreshing it..."
            fi
            php &plugdir;/scripts/checkCron.php
        </INLINE>
    </FILE>

    <FILE Run="/bin/bash">
        <INLINE>
            INIPATH="/etc/php.d/ab_max_input_vars.ini"

            if [ ! -f "$INIPATH" ]; then
              echo "Applying max_input_vars fix..."
              echo "max_input_vars = 2000" > $INIPATH
              CUR_FPM_STATUS=$(/etc/rc.d/rc.php-fpm status)
              if [[ $CUR_FPM_STATUS =~ "not" ]]; then
                echo "Skip FPM reload: not started!"
              else
                echo "Skip FPM reload: Reload..."
                /etc/rc.d/rc.php-fpm reload
              fi
            fi
        </INLINE>
    </FILE>

    <FILE Run="/bin/bash">
        <INLINE>
            echo Adapting some things, because this is beta
            rm &plugdir;/*.page
            cp &plugdir;/pages/*.page &plugdir;/pages/README.md &plugdir;
        </INLINE>
    </FILE>

    <FILE Run="/bin/bash">
        <INLINE>
            echo -n "&version;" > &plugdir;/version
        </INLINE>
    </FILE>

    <FILE Run="/bin/bash">
        <INLINE>
            echo ""
            echo "----------------------------------------------------"
            echo " &name; has been installed."
            echo " (previously known as ca.backup2)"
            echo ""
            echo " 2022-2025, Robin Kluth"
            echo " Version: &version;"
            echo "----------------------------------------------------"
            echo ""
        </INLINE>
    </FILE>

    <!--
    The 'remove' script.
    -->
    <FILE Run="/bin/bash" Method="remove">
        <INLINE>
            echo "Uninstalling... ðŸ˜­ Maybe I see you again soon. Bye!"
            rm -rf &plugdir; 2>/dev/null
            rm -rf /boot/config/plugins/&name;
            update_cron # Let cron know, we removed the target files :P
            echo "Uninstall done."
        </INLINE>
    </FILE>
</PLUGIN>
